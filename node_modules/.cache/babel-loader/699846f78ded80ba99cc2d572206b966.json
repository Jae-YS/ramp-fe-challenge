{"ast":null,"code":"var _jsxFileName = \"/Users/jaeyoungseo/Downloads/ramp-fe-challenge/src/components/Transactions/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n\n  let {\n    transactions,\n    paginatedTransactions,\n    transactionsByEmployee\n  } = _ref;\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch();\n  const setTransactionApproval = useCallback(async _ref2 => {\n    var _paginatedTransaction;\n\n    let {\n      transactionId,\n      newValue\n    } = _ref2;\n    const txFromPaginated = paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : (_paginatedTransaction = paginatedTransactions.data) === null || _paginatedTransaction === void 0 ? void 0 : _paginatedTransaction.find(t => t.id === transactionId);\n\n    if (txFromPaginated) {\n      txFromPaginated.approved = newValue;\n    }\n\n    const txFromEmployee = transactionsByEmployee === null || transactionsByEmployee === void 0 ? void 0 : transactionsByEmployee.find(t => t.id === transactionId);\n\n    if (txFromEmployee) {\n      txFromEmployee.approved = newValue;\n    }\n\n    await fetchWithoutCache(\"setTransactionApproval\", {\n      transactionId,\n      value: newValue\n    });\n  }, [fetchWithoutCache, paginatedTransactions, transactionsByEmployee]);\n\n  if (transactions === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n      transaction: transaction,\n      loading: loading,\n      setTransactionApproval: setTransactionApproval\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"3TeCR/OJhEdaHp00JQf6jBdD3oc=\", false, function () {\n  return [useCustomFetch];\n});\n\n_c = Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useCallback","useCustomFetch","TransactionPane","Transactions","transactions","paginatedTransactions","transactionsByEmployee","fetchWithoutCache","loading","setTransactionApproval","transactionId","newValue","txFromPaginated","data","find","t","id","approved","txFromEmployee","value","map","transaction"],"sources":["/Users/jaeyoungseo/Downloads/ramp-fe-challenge/src/components/Transactions/index.tsx"],"sourcesContent":["import { useCallback } from \"react\"\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\"\nimport { SetTransactionApprovalParams } from \"src/utils/types\"\nimport { TransactionPane } from \"./TransactionPane\"\nimport { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\"\n\nexport const Transactions: TransactionsComponent = ({\n  transactions,\n  paginatedTransactions,\n  transactionsByEmployee,\n}) => {\n  const { fetchWithoutCache, loading } = useCustomFetch()\n  const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n    async ({ transactionId, newValue }) => {\n      const txFromPaginated = paginatedTransactions?.data?.find((t) => t.id === transactionId)\n      if (txFromPaginated) {\n        txFromPaginated.approved = newValue\n      }\n\n      const txFromEmployee = transactionsByEmployee?.find((t) => t.id === transactionId)\n      if (txFromEmployee) {\n        txFromEmployee.approved = newValue\n      }\n\n      await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n        transactionId,\n        value: newValue,\n      })\n    },\n    [fetchWithoutCache, paginatedTransactions, transactionsByEmployee]\n  )\n\n  if (transactions === null) {\n    return <div className=\"RampLoading--container\">Loading...</div>\n  }\n\n  return (\n    <div data-testid=\"transaction-container\">\n      {transactions.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          loading={loading}\n          setTransactionApproval={setTransactionApproval}\n        />\n      ))}\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,SAASC,eAAT,QAAgC,mBAAhC;;AAGA,OAAO,MAAMC,YAAmC,GAAG,QAI7C;EAAA;;EAAA,IAJ8C;IAClDC,YADkD;IAElDC,qBAFkD;IAGlDC;EAHkD,CAI9C;EACJ,MAAM;IAAEC,iBAAF;IAAqBC;EAArB,IAAiCP,cAAc,EAArD;EACA,MAAMQ,sBAAsB,GAAGT,WAAW,CACxC,eAAuC;IAAA;;IAAA,IAAhC;MAAEU,aAAF;MAAiBC;IAAjB,CAAgC;IACrC,MAAMC,eAAe,GAAGP,qBAAH,aAAGA,qBAAH,gDAAGA,qBAAqB,CAAEQ,IAA1B,0DAAG,sBAA6BC,IAA7B,CAAmCC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASN,aAAlD,CAAxB;;IACA,IAAIE,eAAJ,EAAqB;MACnBA,eAAe,CAACK,QAAhB,GAA2BN,QAA3B;IACD;;IAED,MAAMO,cAAc,GAAGZ,sBAAH,aAAGA,sBAAH,uBAAGA,sBAAsB,CAAEQ,IAAxB,CAA8BC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASN,aAA7C,CAAvB;;IACA,IAAIQ,cAAJ,EAAoB;MAClBA,cAAc,CAACD,QAAf,GAA0BN,QAA1B;IACD;;IAED,MAAMJ,iBAAiB,CAAqC,wBAArC,EAA+D;MACpFG,aADoF;MAEpFS,KAAK,EAAER;IAF6E,CAA/D,CAAvB;EAID,CAhBuC,EAiBxC,CAACJ,iBAAD,EAAoBF,qBAApB,EAA2CC,sBAA3C,CAjBwC,CAA1C;;EAoBA,IAAIF,YAAY,KAAK,IAArB,EAA2B;IACzB,oBAAO;MAAK,SAAS,EAAC,wBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAK,eAAY,uBAAjB;IAAA,UACGA,YAAY,CAACgB,GAAb,CAAkBC,WAAD,iBAChB,QAAC,eAAD;MAEE,WAAW,EAAEA,WAFf;MAGE,OAAO,EAAEb,OAHX;MAIE,sBAAsB,EAAEC;IAJ1B,GACOY,WAAW,CAACL,EADnB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CA1CM;;GAAMb,Y;UAK4BF,c;;;KAL5BE,Y"},"metadata":{},"sourceType":"module"}